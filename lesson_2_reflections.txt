What happens when you initialize a repository? Why do you need to do it?

You create the .git file, which is essentially a history log file for future commits.  To keep
track of your file changes.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area contains candidate files for a commit to the repository. It indicates files that are done being change for now.

How can you use the staging area to make sure you have one commit per logical
change?

By doing get diff --staged to see the difference between the staged area changes and the latest commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

When you want to try a new feature that might not work out or if you are working with someone else on the code.

How do the diagrams help you visualize the branch structure?

They let you see which directions the program has gone in and if they are connected.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

A piece of code containing edits from both branches.  To understand the code change history.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

The possibility of time-saving automatic merging would help produce more modular code and save time.  

